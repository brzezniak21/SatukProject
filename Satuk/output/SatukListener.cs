//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Bartosz/Desktop/SatukProject-main/Satuk/Satuk.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SatukParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface ISatukListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] SatukParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] SatukParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] SatukParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] SatukParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>display</c>
	/// labeled alternative in <see cref="SatukParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDisplay([NotNull] SatukParser.DisplayContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>display</c>
	/// labeled alternative in <see cref="SatukParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDisplay([NotNull] SatukParser.DisplayContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>displayString</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDisplayString([NotNull] SatukParser.DisplayStringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>displayString</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDisplayString([NotNull] SatukParser.DisplayStringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>print_variable</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint_variable([NotNull] SatukParser.Print_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>print_variable</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint_variable([NotNull] SatukParser.Print_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>print_char</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint_char([NotNull] SatukParser.Print_charContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>print_char</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint_char([NotNull] SatukParser.Print_charContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>print_int</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint_int([NotNull] SatukParser.Print_intContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>print_int</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint_int([NotNull] SatukParser.Print_intContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>print_float</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint_float([NotNull] SatukParser.Print_floatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>print_float</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint_float([NotNull] SatukParser.Print_floatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>print_bool</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint_bool([NotNull] SatukParser.Print_boolContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>print_bool</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint_bool([NotNull] SatukParser.Print_boolContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>print_arithmetics</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint_arithmetics([NotNull] SatukParser.Print_arithmeticsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>print_arithmetics</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint_arithmetics([NotNull] SatukParser.Print_arithmeticsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>print_logicalInstructions</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint_logicalInstructions([NotNull] SatukParser.Print_logicalInstructionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>print_logicalInstructions</c>
	/// labeled alternative in <see cref="SatukParser.print_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint_logicalInstructions([NotNull] SatukParser.Print_logicalInstructionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ArAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArAss([NotNull] SatukParser.ArAssContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArAss([NotNull] SatukParser.ArAssContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolAss([NotNull] SatukParser.BoolAssContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolAss([NotNull] SatukParser.BoolAssContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stringAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringAss([NotNull] SatukParser.StringAssContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stringAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringAss([NotNull] SatukParser.StringAssContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>charAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharAss([NotNull] SatukParser.CharAssContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>charAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharAss([NotNull] SatukParser.CharAssContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>intConstAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntConstAss([NotNull] SatukParser.IntConstAssContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>intConstAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntConstAss([NotNull] SatukParser.IntConstAssContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varDynAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDynAss([NotNull] SatukParser.VarDynAssContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varDynAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDynAss([NotNull] SatukParser.VarDynAssContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>floatConstAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloatConstAss([NotNull] SatukParser.FloatConstAssContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>floatConstAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloatConstAss([NotNull] SatukParser.FloatConstAssContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>classAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassAss([NotNull] SatukParser.ClassAssContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>classAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassAss([NotNull] SatukParser.ClassAssContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.assignment_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment_function([NotNull] SatukParser.Assignment_functionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.assignment_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment_function([NotNull] SatukParser.Assignment_functionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numberArithm</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberArithm([NotNull] SatukParser.NumberArithmContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numberArithm</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberArithm([NotNull] SatukParser.NumberArithmContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parenArithm</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenArithm([NotNull] SatukParser.ParenArithmContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenArithm</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenArithm([NotNull] SatukParser.ParenArithmContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opArithm</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpArithm([NotNull] SatukParser.OpArithmContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opArithm</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpArithm([NotNull] SatukParser.OpArithmContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>incVar</c>
	/// labeled alternative in <see cref="SatukParser.mutators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncVar([NotNull] SatukParser.IncVarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>incVar</c>
	/// labeled alternative in <see cref="SatukParser.mutators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncVar([NotNull] SatukParser.IncVarContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>decVar</c>
	/// labeled alternative in <see cref="SatukParser.mutators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecVar([NotNull] SatukParser.DecVarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>decVar</c>
	/// labeled alternative in <see cref="SatukParser.mutators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecVar([NotNull] SatukParser.DecVarContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>notLogical</c>
	/// labeled alternative in <see cref="SatukParser.logical_instructions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotLogical([NotNull] SatukParser.NotLogicalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>notLogical</c>
	/// labeled alternative in <see cref="SatukParser.logical_instructions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotLogical([NotNull] SatukParser.NotLogicalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opLogical</c>
	/// labeled alternative in <see cref="SatukParser.logical_instructions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLogical([NotNull] SatukParser.OpLogicalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opLogical</c>
	/// labeled alternative in <see cref="SatukParser.logical_instructions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLogical([NotNull] SatukParser.OpLogicalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varLogical</c>
	/// labeled alternative in <see cref="SatukParser.logical_instructions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarLogical([NotNull] SatukParser.VarLogicalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varLogical</c>
	/// labeled alternative in <see cref="SatukParser.logical_instructions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarLogical([NotNull] SatukParser.VarLogicalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf([NotNull] SatukParser.IfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf([NotNull] SatukParser.IfContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="SatukParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] SatukParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="SatukParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] SatukParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>elifStatement</c>
	/// labeled alternative in <see cref="SatukParser.elif_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElifStatement([NotNull] SatukParser.ElifStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>elifStatement</c>
	/// labeled alternative in <see cref="SatukParser.elif_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElifStatement([NotNull] SatukParser.ElifStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>elseStatement</c>
	/// labeled alternative in <see cref="SatukParser.else_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseStatement([NotNull] SatukParser.ElseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>elseStatement</c>
	/// labeled alternative in <see cref="SatukParser.else_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseStatement([NotNull] SatukParser.ElseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>loopStatement</c>
	/// labeled alternative in <see cref="SatukParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopStatement([NotNull] SatukParser.LoopStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>loopStatement</c>
	/// labeled alternative in <see cref="SatukParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopStatement([NotNull] SatukParser.LoopStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctions([NotNull] SatukParser.FunctionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctions([NotNull] SatukParser.FunctionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] SatukParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] SatukParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>construct</c>
	/// labeled alternative in <see cref="SatukParser.constructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstruct([NotNull] SatukParser.ConstructContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>construct</c>
	/// labeled alternative in <see cref="SatukParser.constructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstruct([NotNull] SatukParser.ConstructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn([NotNull] SatukParser.ReturnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn([NotNull] SatukParser.ReturnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.class"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass([NotNull] SatukParser.ClassContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.class"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass([NotNull] SatukParser.ClassContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.execute_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExecute_function([NotNull] SatukParser.Execute_functionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.execute_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExecute_function([NotNull] SatukParser.Execute_functionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>funcVoid</c>
	/// labeled alternative in <see cref="SatukParser.void_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncVoid([NotNull] SatukParser.FuncVoidContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>funcVoid</c>
	/// labeled alternative in <see cref="SatukParser.void_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncVoid([NotNull] SatukParser.FuncVoidContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>funcInt</c>
	/// labeled alternative in <see cref="SatukParser.int_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncInt([NotNull] SatukParser.FuncIntContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>funcInt</c>
	/// labeled alternative in <see cref="SatukParser.int_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncInt([NotNull] SatukParser.FuncIntContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>funcFloat</c>
	/// labeled alternative in <see cref="SatukParser.float_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncFloat([NotNull] SatukParser.FuncFloatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>funcFloat</c>
	/// labeled alternative in <see cref="SatukParser.float_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncFloat([NotNull] SatukParser.FuncFloatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>funcString</c>
	/// labeled alternative in <see cref="SatukParser.string_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncString([NotNull] SatukParser.FuncStringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>funcString</c>
	/// labeled alternative in <see cref="SatukParser.string_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncString([NotNull] SatukParser.FuncStringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>funcChar</c>
	/// labeled alternative in <see cref="SatukParser.char_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncChar([NotNull] SatukParser.FuncCharContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>funcChar</c>
	/// labeled alternative in <see cref="SatukParser.char_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncChar([NotNull] SatukParser.FuncCharContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>funcBool</c>
	/// labeled alternative in <see cref="SatukParser.bool_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncBool([NotNull] SatukParser.FuncBoolContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>funcBool</c>
	/// labeled alternative in <see cref="SatukParser.bool_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncBool([NotNull] SatukParser.FuncBoolContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>funcVar</c>
	/// labeled alternative in <see cref="SatukParser.variable_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncVar([NotNull] SatukParser.FuncVarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>funcVar</c>
	/// labeled alternative in <see cref="SatukParser.variable_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncVar([NotNull] SatukParser.FuncVarContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.void_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVoid_return([NotNull] SatukParser.Void_returnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.void_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVoid_return([NotNull] SatukParser.Void_returnContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>retInt</c>
	/// labeled alternative in <see cref="SatukParser.int_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRetInt([NotNull] SatukParser.RetIntContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>retInt</c>
	/// labeled alternative in <see cref="SatukParser.int_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRetInt([NotNull] SatukParser.RetIntContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>retFloat</c>
	/// labeled alternative in <see cref="SatukParser.float_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRetFloat([NotNull] SatukParser.RetFloatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>retFloat</c>
	/// labeled alternative in <see cref="SatukParser.float_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRetFloat([NotNull] SatukParser.RetFloatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>retString</c>
	/// labeled alternative in <see cref="SatukParser.string_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRetString([NotNull] SatukParser.RetStringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>retString</c>
	/// labeled alternative in <see cref="SatukParser.string_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRetString([NotNull] SatukParser.RetStringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>retChar</c>
	/// labeled alternative in <see cref="SatukParser.char_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRetChar([NotNull] SatukParser.RetCharContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>retChar</c>
	/// labeled alternative in <see cref="SatukParser.char_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRetChar([NotNull] SatukParser.RetCharContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>retBool</c>
	/// labeled alternative in <see cref="SatukParser.bool_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRetBool([NotNull] SatukParser.RetBoolContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>retBool</c>
	/// labeled alternative in <see cref="SatukParser.bool_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRetBool([NotNull] SatukParser.RetBoolContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>retVar</c>
	/// labeled alternative in <see cref="SatukParser.variable_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRetVar([NotNull] SatukParser.RetVarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>retVar</c>
	/// labeled alternative in <see cref="SatukParser.variable_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRetVar([NotNull] SatukParser.RetVarContext context);
}
