//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Msi/RiderProjects/Satuk/Satuk/Satuk.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISatukListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class SatukBaseListener : ISatukListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] SatukParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] SatukParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] SatukParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] SatukParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>display</c>
	/// labeled alternative in <see cref="SatukParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDisplay([NotNull] SatukParser.DisplayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>display</c>
	/// labeled alternative in <see cref="SatukParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDisplay([NotNull] SatukParser.DisplayContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] SatukParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] SatukParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolAss([NotNull] SatukParser.BoolAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolAss([NotNull] SatukParser.BoolAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolLogAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_bool_logical"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolLogAss([NotNull] SatukParser.BoolLogAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolLogAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_bool_logical"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolLogAss([NotNull] SatukParser.BoolLogAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolDynAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_bool_dynamic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolDynAss([NotNull] SatukParser.BoolDynAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolDynAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_bool_dynamic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolDynAss([NotNull] SatukParser.BoolDynAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>stringAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringAss([NotNull] SatukParser.StringAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringAss([NotNull] SatukParser.StringAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>stringDynAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_string_dynamic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringDynAss([NotNull] SatukParser.StringDynAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringDynAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_string_dynamic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringDynAss([NotNull] SatukParser.StringDynAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>charAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_char"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharAss([NotNull] SatukParser.CharAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>charAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_char"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharAss([NotNull] SatukParser.CharAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>charDynAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_char_dynamic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharDynAss([NotNull] SatukParser.CharDynAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>charDynAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_char_dynamic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharDynAss([NotNull] SatukParser.CharDynAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>intConstAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_int_constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntConstAss([NotNull] SatukParser.IntConstAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>intConstAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_int_constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntConstAss([NotNull] SatukParser.IntConstAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>intArAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_int_ar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntArAss([NotNull] SatukParser.IntArAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>intArAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_int_ar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntArAss([NotNull] SatukParser.IntArAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>intDynAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_int_dynamic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntDynAss([NotNull] SatukParser.IntDynAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>intDynAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_int_dynamic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntDynAss([NotNull] SatukParser.IntDynAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>floatConstAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_float_constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloatConstAss([NotNull] SatukParser.FloatConstAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>floatConstAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_float_constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloatConstAss([NotNull] SatukParser.FloatConstAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>floatDynAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_float_dynamic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloatDynAss([NotNull] SatukParser.FloatDynAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>floatDynAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_float_dynamic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloatDynAss([NotNull] SatukParser.FloatDynAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>floatArAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_float_ar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloatArAss([NotNull] SatukParser.FloatArAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>floatArAss</c>
	/// labeled alternative in <see cref="SatukParser.assign_float_ar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloatArAss([NotNull] SatukParser.FloatArAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>classAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment_class"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassAss([NotNull] SatukParser.ClassAssContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>classAss</c>
	/// labeled alternative in <see cref="SatukParser.assignment_class"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassAss([NotNull] SatukParser.ClassAssContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.assignment_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment_function([NotNull] SatukParser.Assignment_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.assignment_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment_function([NotNull] SatukParser.Assignment_functionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numberArithm</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberArithm([NotNull] SatukParser.NumberArithmContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numberArithm</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberArithm([NotNull] SatukParser.NumberArithmContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenArithm</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenArithm([NotNull] SatukParser.ParenArithmContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenArithm</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenArithm([NotNull] SatukParser.ParenArithmContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>opArithm</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpArithm([NotNull] SatukParser.OpArithmContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>opArithm</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpArithm([NotNull] SatukParser.OpArithmContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>opArithmInt</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics_int"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpArithmInt([NotNull] SatukParser.OpArithmIntContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>opArithmInt</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics_int"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpArithmInt([NotNull] SatukParser.OpArithmIntContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>opArithmFloat</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics_float"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpArithmFloat([NotNull] SatukParser.OpArithmFloatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>opArithmFloat</c>
	/// labeled alternative in <see cref="SatukParser.arithmetics_float"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpArithmFloat([NotNull] SatukParser.OpArithmFloatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.mutators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMutators([NotNull] SatukParser.MutatorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.mutators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMutators([NotNull] SatukParser.MutatorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>incInt</c>
	/// labeled alternative in <see cref="SatukParser.int_inc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncInt([NotNull] SatukParser.IncIntContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>incInt</c>
	/// labeled alternative in <see cref="SatukParser.int_inc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncInt([NotNull] SatukParser.IncIntContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>incFloat</c>
	/// labeled alternative in <see cref="SatukParser.float_inc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncFloat([NotNull] SatukParser.IncFloatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>incFloat</c>
	/// labeled alternative in <see cref="SatukParser.float_inc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncFloat([NotNull] SatukParser.IncFloatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>decInt</c>
	/// labeled alternative in <see cref="SatukParser.int_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecInt([NotNull] SatukParser.DecIntContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>decInt</c>
	/// labeled alternative in <see cref="SatukParser.int_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecInt([NotNull] SatukParser.DecIntContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>decFloat</c>
	/// labeled alternative in <see cref="SatukParser.float_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecFloat([NotNull] SatukParser.DecFloatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>decFloat</c>
	/// labeled alternative in <see cref="SatukParser.float_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecFloat([NotNull] SatukParser.DecFloatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>incVar</c>
	/// labeled alternative in <see cref="SatukParser.variable_inc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncVar([NotNull] SatukParser.IncVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>incVar</c>
	/// labeled alternative in <see cref="SatukParser.variable_inc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncVar([NotNull] SatukParser.IncVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>decVar</c>
	/// labeled alternative in <see cref="SatukParser.variable_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecVar([NotNull] SatukParser.DecVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>decVar</c>
	/// labeled alternative in <see cref="SatukParser.variable_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecVar([NotNull] SatukParser.DecVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.logical_instructions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogical_instructions([NotNull] SatukParser.Logical_instructionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.logical_instructions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogical_instructions([NotNull] SatukParser.Logical_instructionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>logBool</c>
	/// labeled alternative in <see cref="SatukParser.logical_bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogBool([NotNull] SatukParser.LogBoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>logBool</c>
	/// labeled alternative in <see cref="SatukParser.logical_bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogBool([NotNull] SatukParser.LogBoolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>logNum</c>
	/// labeled alternative in <see cref="SatukParser.logical_numeric"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogNum([NotNull] SatukParser.LogNumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>logNum</c>
	/// labeled alternative in <see cref="SatukParser.logical_numeric"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogNum([NotNull] SatukParser.LogNumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>logText</c>
	/// labeled alternative in <see cref="SatukParser.logical_text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogText([NotNull] SatukParser.LogTextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>logText</c>
	/// labeled alternative in <see cref="SatukParser.logical_text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogText([NotNull] SatukParser.LogTextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>logVar</c>
	/// labeled alternative in <see cref="SatukParser.logical_var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogVar([NotNull] SatukParser.LogVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>logVar</c>
	/// labeled alternative in <see cref="SatukParser.logical_var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogVar([NotNull] SatukParser.LogVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_statement([NotNull] SatukParser.If_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_statement([NotNull] SatukParser.If_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoop([NotNull] SatukParser.LoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoop([NotNull] SatukParser.LoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.print_content"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint_content([NotNull] SatukParser.Print_contentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.print_content"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint_content([NotNull] SatukParser.Print_contentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctions([NotNull] SatukParser.FunctionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctions([NotNull] SatukParser.FunctionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] SatukParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] SatukParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>construct</c>
	/// labeled alternative in <see cref="SatukParser.constructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstruct([NotNull] SatukParser.ConstructContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>construct</c>
	/// labeled alternative in <see cref="SatukParser.constructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstruct([NotNull] SatukParser.ConstructContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn([NotNull] SatukParser.ReturnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn([NotNull] SatukParser.ReturnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.class"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass([NotNull] SatukParser.ClassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.class"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass([NotNull] SatukParser.ClassContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.execute_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExecute_function([NotNull] SatukParser.Execute_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.execute_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExecute_function([NotNull] SatukParser.Execute_functionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>funcVoid</c>
	/// labeled alternative in <see cref="SatukParser.void_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncVoid([NotNull] SatukParser.FuncVoidContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>funcVoid</c>
	/// labeled alternative in <see cref="SatukParser.void_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncVoid([NotNull] SatukParser.FuncVoidContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>funcInt</c>
	/// labeled alternative in <see cref="SatukParser.int_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncInt([NotNull] SatukParser.FuncIntContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>funcInt</c>
	/// labeled alternative in <see cref="SatukParser.int_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncInt([NotNull] SatukParser.FuncIntContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>funcFloat</c>
	/// labeled alternative in <see cref="SatukParser.float_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncFloat([NotNull] SatukParser.FuncFloatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>funcFloat</c>
	/// labeled alternative in <see cref="SatukParser.float_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncFloat([NotNull] SatukParser.FuncFloatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>funcString</c>
	/// labeled alternative in <see cref="SatukParser.string_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncString([NotNull] SatukParser.FuncStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>funcString</c>
	/// labeled alternative in <see cref="SatukParser.string_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncString([NotNull] SatukParser.FuncStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>funcChar</c>
	/// labeled alternative in <see cref="SatukParser.char_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncChar([NotNull] SatukParser.FuncCharContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>funcChar</c>
	/// labeled alternative in <see cref="SatukParser.char_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncChar([NotNull] SatukParser.FuncCharContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>funcBool</c>
	/// labeled alternative in <see cref="SatukParser.bool_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncBool([NotNull] SatukParser.FuncBoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>funcBool</c>
	/// labeled alternative in <see cref="SatukParser.bool_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncBool([NotNull] SatukParser.FuncBoolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>funcVar</c>
	/// labeled alternative in <see cref="SatukParser.variable_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncVar([NotNull] SatukParser.FuncVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>funcVar</c>
	/// labeled alternative in <see cref="SatukParser.variable_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncVar([NotNull] SatukParser.FuncVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SatukParser.void_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVoid_return([NotNull] SatukParser.Void_returnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SatukParser.void_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVoid_return([NotNull] SatukParser.Void_returnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>retInt</c>
	/// labeled alternative in <see cref="SatukParser.int_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRetInt([NotNull] SatukParser.RetIntContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>retInt</c>
	/// labeled alternative in <see cref="SatukParser.int_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRetInt([NotNull] SatukParser.RetIntContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>retFloat</c>
	/// labeled alternative in <see cref="SatukParser.float_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRetFloat([NotNull] SatukParser.RetFloatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>retFloat</c>
	/// labeled alternative in <see cref="SatukParser.float_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRetFloat([NotNull] SatukParser.RetFloatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>retString</c>
	/// labeled alternative in <see cref="SatukParser.string_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRetString([NotNull] SatukParser.RetStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>retString</c>
	/// labeled alternative in <see cref="SatukParser.string_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRetString([NotNull] SatukParser.RetStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>retChar</c>
	/// labeled alternative in <see cref="SatukParser.char_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRetChar([NotNull] SatukParser.RetCharContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>retChar</c>
	/// labeled alternative in <see cref="SatukParser.char_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRetChar([NotNull] SatukParser.RetCharContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>retBool</c>
	/// labeled alternative in <see cref="SatukParser.bool_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRetBool([NotNull] SatukParser.RetBoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>retBool</c>
	/// labeled alternative in <see cref="SatukParser.bool_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRetBool([NotNull] SatukParser.RetBoolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>retVar</c>
	/// labeled alternative in <see cref="SatukParser.variable_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRetVar([NotNull] SatukParser.RetVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>retVar</c>
	/// labeled alternative in <see cref="SatukParser.variable_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRetVar([NotNull] SatukParser.RetVarContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
